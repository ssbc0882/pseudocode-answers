{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Exercises:\
\
1. In your own words, explain what clean code is and why it\'92s important.\
\
A:  It s code that\'92s readable for users to understand,  and code that\'92s able to maintain through updating and changes. \
\
2. Read this article about Toyota and their use of bad code. Although you may not yet understand all of the topics discussed, think about another commonly used object that relies on computers and explain what would happen if the code was not created to an acceptable standard. \
\
A: Banking. Accounts rely 100% on computers to conduct business. If code is to acceptable standard, it would create many problems, small and/or big. One issue is creating long lines inside the bank and transaction errors. A big issue would create security issues because of sensitive information such as names, addresses, account numbers, social security numbers, etc. \
\
3. Would you consider the following to be clean code? Explain why or why not. If not, refractor the code. \
\
A: I think it\'92s not clean code for a couple of reasons. The function name is not very meaningful because it doesn\'92t relate to what the action of the function. It looks like that it\'92s doing two things. \
\
FUNCTION convertToCelcius(Fahrenheit) \
	RETURN  (5/9) * (Fahrenheit-32);\
\
END FUNCTION\
\
FUNCTION convertToFarenheit(Celcius) \{\
	RETURN Celcius * 1.8000 + 32.00;\
\
END FUNCTION\
\
4.  Yes, I think it\'92s clean code because the function name tells what it\'92s main purpose is to calculate the percent. It has variables that directly relates to code.\
\
5a. The following function prints the subtotal of a customer\'92s transaction and receives payment accordingly.\
\
INIT tax\
INIT discountRate\
\
FUNCTION getPayment (subTotal)\
	\
\
	PRINT \'93Your total due: is: \'93 + subtotal  *discountRate + (subtotal * tax)\
\
END FUNCTION\
\
FUNCTION changeBack (cash)\
\
	PRINT \'93Change due: \'93 + cash - subTotal * discountRate + (subTotal * tax)\
\
END FUNCTION\
\
END chargedCredit(subtotal) \{\
	\
	PRINT \'93Your credit card has been charged: \'93 + subTotal * discountRate + (subtotal * tax)\
\
END FUNCTION\
\
5b. The following function checks out a book if there are no issues with the guest\'92s account.\
\
\
FUNCTION guestAccount\
	PRINT guest.accountActive\
	PRINT guest.hasOverdueBooks\
	PRINT guest.outstandingFees\
\
END FUNCTION\
\
FUNCTION checkoutBook(book, guest)\
\
IF book.status is not checkout THEN\
\
	APPEND book to guest.books\
\
	PRINT \'93Your books have been issued\'94\
\
ELSE \
	PRINT \'93Unable to check out book.\'94\
\
END IF\
\
END FUNCTION\
	\
5c. The following class is a code snippet that should support the transactions a customer can perform at an ATM.\
\
CLASS BankAccount\
\
FUNCTION displayBalance\
	\
	PRINT balance\
\
END FUNCTION\
\
FUNCTION deposit (amount)\
	\
	SET balance to balance + amount\
\
END FUNCTION\
\
FUNCTION withdrawl (amount)\
\
	IF balance > amount THEN\
	\
	SET balance to  balance - amount\
\
	END IF\
\
END FUNCTION\
\
END\
\
CLASS BankOffers\
\
FUNCTION creditCardOffer\
\
	IF NOT(customer.hasCreditCard) THEN\
	\
	CALL offerCreditCard\
\
	END IF\
\
END FUNCTION\
\
FUNCTION checkStatus\
\
	IF NOT (customer.hasCheckingAccount) THEN\
	\
	CALL offerCheckingAccount\
\
	END IF\
\
END FUNCTION\
\
END\
\
Programming Questions\
\
6. Square Given an array of integers, find out whether the sum of the integers is a perfect square. If it is a perfect square, return the square root, otherwise return the sum. \
\
function perfectSquareArray (array) \{\
	var sum = 0;\
	for (var i = 0; i < array.length; i++) \{\
		sum = sum + array[i];\
\
	\}\
	if (Math.sqrt(sum) % 1 === 0) \{\
		return Math.sqrt(sum);\
	\} else \{\
		return sum;\
	\}\
\}\
\
7. Duplicate Given an array of integers, find out whether the array contains any duplicate elements. The function should return true if any value appears at least twice in the array, and false if every element is distinct. \
\
function isDuplicateArray (array) \{\
	var value = [ ];\
	for (var i = 0; i < array.length; i++) \{\
	var currentValue = array[i];\
	if (value.indexOf(currentValue) !== -1) \{\
		return true;\
		\}\
		value.push(currentValue);\
	\}\
	return false;\
\}\
}